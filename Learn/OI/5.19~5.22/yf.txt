A：把ai排序
B：保证有解，速度最多增加30次
C：
给一个共有n个点的凸多边形，求一条将该多边形划分为面积和周长都相等的两部分的直线。

设凸多边形周长为C。
在凸多边形上任取一点A，定义函数f(x)：从A点出发在凸多边形上沿顺时针方向移动x个单位长度后，设到达的点为P，
从P点出发沿着凸多边形移动C/2个单位长度后到达Q，函数值为射线PQ两侧的面积差。
不难发现有f(x)=-f(x+C/2)，因为此时射线刚好翻转。
可知在区间[0,C/2]存在零点，二分即可。
D：
给出一个长度为n的数组a。区间[L,R]的值为∑a[L+i]*a[R-i],i[0,R-L]。求所有长度为质数的区间的值的总和。

首先特判2，剩下的质数都是奇数。考虑一对数a[i]和a[j](i和j同奇偶)对答案的贡献次数为[j-i+1,min(i-1,n-j)*2+j-i+1]中的质数个数(不含2)。
算法1：
枚举i，设f[j]为i和j的贡献次数，发现f是分为O(n/log(n))段的分段函数，每段用前缀和直接更新答案。
复杂度O(n^2/log(n))，需要卡常。
算法2：
分类，i<=n-j+1和i>n-j+1。记s[i]为不超过i的质数个数(不含2)。
先考虑i<=n-j+1，i+j<=n+1
贡献为a[i]*a[j]*(s[i+j-1]-s[j-i+1])=a[i]*a[j]*s[i+j-1]-a[i]*a[j]*s[j-i+1]，可以用FFT求第一项
对于i>n-j+1，i+j>n+1
贡献为a[i]*a[j]*(s[2*n-i-j+1]-s[j-i+1])=a[i]*a[j]*s[2*n-i-j+1]-a[i]*a[j]*s[j-i+1]，也可以用FFT求第一项
两部分贡献的第二项可以用FFT一起求出
复杂度O(nlog(n))
E：
有若干个集合，两两之间没有交，全集为不超过n的正整数。
m个操作，合并两个集合或询问两个集合中最接近的两个数的差。

有一个集合较大时处理出与其他集合的答案，两个集合都较小时暴力归并。
然后用各种技巧优化到O(n^1.5)。
F：sam/sa/hash