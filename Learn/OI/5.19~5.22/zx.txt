codechef APRIL18A CHEFAT
网址:https://www.codechef.com/APRIL18A/problems/CHEFAT
题意：给定一个序列p1,p2,...,pn，要求支持区间乘，查询区间$\Pi ^{R}_{i=L}(1-p_i)$，
保证初始时所有$p_i$都小于等于0.9。
题解：
乱搞1：线段树直接维护区间答案，修改时如果区间答案与1的差大于eps，则暴力递归左右儿子。
乱搞2：注意到本题的暴力代码比较简洁，形式很适合循环展开。
又注意到修改比询问慢，所以使用分块，块长为8，以平衡修改与询问的速度。
~~其实这两个乱搞拼起来就能AC了~~
正解：考虑将答案取对数，问题转为维护$\sum ^{R}_{i=L}ln(1-p_i)$。
通过泰勒展开，$ln(1-p_i)=-(x+\frac{{x}^{2}}{2}+\frac{{x}^{3}}{3}.....\infty)$。
然后维护展开式的前100项，大概就能保证精度。
使用线段树维护区间k(k<=100)次幂和即可，复杂度$O(100nlogn)$

codechef APRIL18A SSPLD
网址:https://www.codechef.com/APRIL18A/problems/SSPLD
题意：给定S和K，问有多少个小于$10^K$的数是S的倍数，并且所包含的数字（不包括前导零）可以拼成回文串。
1≤S≤16，1≤K≤$10^18$。
题解：
首先所包含的数字（不包括前导零）可以拼成回文串，等价于包含的数字至多有一个出现了奇数次。
记f[i][j][k][0/1]表示小于10^i的数中，有多少个数模S等于j，出现了奇数次的数字集合为k，是否包含前导零。
对i这一维倍增，对j这一维暴力$S^2$循环卷积，使用FWT来加速k这一维的异或卷积。
中途可以带着点值运算，最后单组数据复杂度为$O(S^2*1024*logK)$

codechef COOK93A HAMEL
网址:https://www.codechef.com/COOK93A/problems/HAMEL
题意：给定一张边连通度大于3的无向图，要求删去一些边，使得剩下的图仍然联通，并且有欧拉路，保证有解。
多组数据，数据组数小于等于64，点数不超过64，边数不超过2016，可能有重边。
题解：
首先，可以证明任意一个边连通度大于3的图一定有解，而且题面中的“欧拉路”可以加强为“欧拉回路”。
方法1：
随机化或者暴力搜索，由于图太小，可以AC
方法2：
直接将原问题加强为”有欧拉回路“。
先任选两个点，求出这两点之间的最小割。显然这个最小割大于2。
从最小割中取出两条边，加入答案边集，并对该最小割将原图割成的两个点集，分别递归处理。
由最小割的性质，可知分成的那两个点集构成的导出子图，边联通度仍然大于3，所以有可递归性。
方法3：
有一个结论，就是一张边连通度大于3的无向图，一定有两棵边不交的生成树T1,T2。
如果我们获得了这两棵树，那么可以通过T1来保证连通性，通过T2中每个点与爸爸的边是否相连来调整点度奇偶性。
由此即可获得答案。
现在问题变为如何求得两棵边不交的生成树T1,T2。
先任取一棵原图的生成树$T_r$，将$T_r$中的边去掉后，每个联通块再取一棵生成树，构成生成森林$T_g$。
现在目标是使生成森林$T_g$变成一棵树，并且$T_r$仍然存在（边集可以发生变化）。
尝试将当前某一条不在$T_r$和$T_g$中的边加入$T_r$或$T_g$。记这条边为e
如果e连接了两棵$T_g$中的树，那么就将其加入$T_r$。
否则寻找e覆盖的$T_r$上的树边e1,e2,...。
如果仍然不行，则寻找e1覆盖的$T_g$中的树边，就像二分图匹配一样。
正确性可以感性地类比匈牙利算法，比较好的证明是利用拟阵。
直接这样做是$O(VE)$的，已经可以AC了。但还能进一步优化。
注意到$T_r$和$T_g$的形态总共只会变化$O(V)$次。
所以在相邻两次变化之间，每条边被尝试增广一次后，就不必进行第二次尝试。
通过并查集维护每个点向根走，第一条没被增广过的边，即可做到$O(V^2*alpha(V)+E*alpha(V))$