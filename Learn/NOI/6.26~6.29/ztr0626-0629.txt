题目来源：CC TRICONT
题目大意：每次向二维平面中加入一个点，询问当前有多少三元点组，形成的三角形包含了原点，强制在线。n<=4e5。
题目解法：显然只和角度有关。考虑计算不合法的三元组，考虑让这样的三元组在“最逆时针”的那个点上被统计到。如果一个点按顺时针找180度能找到K个点，那么会产生C(K,2)=1+2+...+(K-1)的贡献。于是我们只要维护一下每个点的K值，然后新加入点的时候，新贡献就恰好等于逆时针找180度内的全部点的K值之和，然后令这些点的K值+1，最后计算新点的K值即可。因为强制在线不让离散化，只好用平衡树来实现。

题目来源：CC GOODPROB
题目大意：给定序列A1...An，求sum(1<=l<=r<=n){max{Al...Ar}*f(Al,Ar)}，其中f(x,y)等于1当且仅当x&y等于min(x,y)，否则等于0。n<=1e5，Ai<2^14。
题目解法：考虑枚举最大值，此时l和r的取值范围都是一段区间。我们可以暴力枚举区间长较小的那边，这样就转化为了O(nlogn)次（考虑笛卡尔树上，从下往上启发式合并）询问区间内有多少个数是一个数的二进制子集。离线后就转化为了n次修改和O(nlogn)次询问。这个问题有个很经典的对权值分块的做法（前一半位修改时暴力算，后一半位询问时暴力查），总复杂度可以做到O(nsqrt(logn*A))。

题目来源：CC MAXGRID
题目大意：平面中有n个带权点，找一个L×L的正方形使其包含的点的权值和最大，同时找出能得到此点权和的最小L。n,L,x,y<=1e5。
题目解法：第一问扫描线，第二问二分。

题目来源：CC WORKCHEF
题目大意：我们定义一个数x是K-特殊数，当且仅当至少有K个不同的数码，使得这些数码都在x的十进制表达中出现，且都是x的约数。询问L到R内有多少个K-特殊数，L,R<=10^18，K<=9。
题目解法：LCM(1,2,...,9)只有2520，数位DP的状态里记一下当前位数，每种数码有没有出现，模2520的余数即可。

题目来源：CC FRJUMP
题目大意：维护一个序列A[1..n]，支持修改一个位置的值，以及给定d询问A[1]+A[1+d]+...+A[1+k*d]，其中k是最大的满足1+k*d<=n的整数。n,q<=1e5。
题目解法：对第x个位置修改的时候，只会影响d是(x-1)的约数时的答案，然后暴力。

题目来源：CC SADPAIRS
题目大意：一个无向图，每个点有颜色。你需要对于每个点，回答如果将这个点以及和这个点相接的所有边从图中删去，有多少点对满足它们颜色相同且不连通。n,m<=2e5。
题目解法：考虑树上做法。建点双树讨论。
