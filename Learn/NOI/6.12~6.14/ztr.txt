题目来源：CodeForces 809E [#415-Div1]
http://codeforces.com/contest/809/problem/E

题目大意：给定一棵n个点的树，给定点权是一个1到n的排列，一对点u,v之间的贡献是phi(a_u*a_v)*d(u,v)。
其中a_i表示i号点的点权，phi(x)表示x的欧拉函数，d(u,v)表示u，v在树上的路径的边数。
n<=2e5，8s

题目解法：考虑phi(i*j)=phi(i)*phi(j)*d/phi(d)，其中d=gcd(i,j)。
所以可以考虑枚举gcd，然后求出gcd(a_u,a_v)=d的phi(a_u)*phi(a_v)*d(u,v)之和。
这个可能还是不是很好搞，考虑先求出gcd(a_u,a_v)是d的倍数时的贡献和，然后反演一下，就能知道其恰好为d时的贡献和。
此时可以考虑保留所有a_u是d的倍数的点，那么任意两个保留的点都是合法的。
所以每次对这些点建一棵虚树，在虚树上跑树形DP就能得出结果。
由于点权是个排列，所以每次虚树的点数之和是O(nlogn)的，那么总复杂度是O(nlog^2n)。
（虚树部分也可以用点分治来代替，复杂度不变）











题目来源：Codeforces 794G [#414(Div1+Div2)]
http://codeforces.com/contest/794/problem/G

题目大意：给定两个串c，d，仅包含'A','B','?'。还给定一个n。
你需要先对每个问号决定其是'A'还是'B'；
然后自定义两个串s，t，仅包含'0','1'，且长度都不能超过给定的n；
并且将c，d中的每个'A'都替换成s，每个'B'都替换成t，最后使得c和d相等。
求整个过程的方案数。
|c|,|d|,n<=3e5，2s

题目解法：先考虑没有'?'（也可以理解为'?'已确定）的情况。此时如果c=d，那么s和t瞎**选就好了。方案数是(2+4+...+2^n)^2。
否则，通过一些性质分析（感受），你会发现一定存在一个小串w，使得s和t都是若干个w拼接。
不妨另s=p*w,t=q*w。考虑如何选择p和q使得替换后c=d，显然这个时候w是什么并不重要。
令da/db表示c中A/B的个数减去d中的，那么必须有p*da+q*db=0。
如果da*db>0，那么无解。
如果da*db=0且da+db!=0，那么也无解。
如果da*db<0，那么有p/q=|db|/|da|即可。
再考虑到w是可以任意取的，所以令这里的p,q取互质的那一对，然后|w|<=lim=n/max(p,q)就好了。方案数是(2+4+...+2^lim)^2。
（否则容易计数重复，如p=4,q=6,w='1'和p=2,q=3,w='11'）
如果da=db=0，那么对p和q就不做比例要求了。于是先枚举w的长度，考虑p,q<=n/|w|且gcd(p,q)=1的p,q对数。这是个数论式子，推一推就好了。
现在考虑有问号的情况，发现只要da确定了就能确定db，于是按上面的方法讨论，而使da,db为此的方案数用组合数算就好了。
注意判断da=db=0的情况中，可能有一部分是c=d的情况，upadte一下。
主复杂度在扫描c和d上（O(|c|+|d|)），以及计算数论式子上（O(nlogn)，预处理阶乘算组合数只需O(n)）。











题目来源：Codeforces 794F [#414(Div1+Div2)]
http://codeforces.com/contest/794/problem/F

题目大意：有n个十进制数，维护q次1.区间将某一数码全部替换成某一非0数码，2.求区间和。
n,q<=1e5，数<1e9，2s

题目解法：由于替换后的数码非0,每个数的位数并不会减少。
对0～9各建一个数据结构，或者数据结构的每个结点对0～9各开一个信息，闭着眼睛维护一下区间权值和就好了。
复杂度O(10nlogn)。











题目来源：CodeForces 809D [#415-Div1]
http://codeforces.com/contest/809/problem/DLIS（最长上升子序列）长度最大。
n<=3e5，l[],r[]<=1e9，2s

题目解法：考虑还是把每个数加在末尾，并不断维护f[]数组，其中f[x]表示长度为x的LIS末尾最小能是多少。
然后对于每个[l,r]，考虑对f[]在[1,l-1],[l,r-1],[r,1e9]这些不同情况下的update。
并且因为f[]是单调的，所以这些情况分别都对应了一段下标区间，找个数据结构维护一下就好了。
复杂度O(nlogn)。











题目来源：CodeForces 799F [#413(Div1+Div2)]
http://codeforces.com/contest/799/problem/F

题目大意：1*m的格子图上有n个给定格子区间，你要再选择一个格子图上的格子区间，使得这个格子区间：
1.和每个给定的格子区间，要么没有交，要么相交了奇数个格子；
2.至少和一个给定的格子区间相交。
n,m<=2e5，3s

题目解法：2条件是可以去掉的。
枚举左端点，考虑每个给定区间对可选右端点的限制，奇偶位置分情况考虑的话每个限制都是最多两个区间，维护一下区间交。
每次移动左端点的时候，包含左端点的区间对应的限制的奇偶部分会反转一下；扫过一个给定区间的端点的时候，该区间对应的限制会有性质上的变化（讨论）。
复杂度O((n+m)log(n+m))。











题目来源：CodeForces 799G [#413(Div1+Div2)]
http://codeforces.com/contest/799/problem/G

题目大意：给定一个凸n边形，q次询问每次给你一个多边形内部的点，回答一条过该点且能平分多边形面积的直线。
n<=1e4，q<=1e5，3s

题目解法：
为什么一定有解：设f(x)=S[x,x+pi]-S[x-pi,x],其中S[l,r]表示由给定点出发夹角[l,r]截得的面积。
显然有f(0)*f(pi)<=0，又因为f(x)连续，所以必定存在一个0<=a<=pi使得f(a)=0。
从该思路出发，对于当前f(l)*f(r)<=0，考察f((l+r)/2)的符号，就能每次将查找范围[l,r]大小减半，做到符合精度需求即可。
（尽管f(x)并不单调，但是我们只要找任意一个满足条件的解，所以这样做是对的）
关于如何在线求f(x)，只需在多边形上二分出射线延长出去和多边形相交在哪条线段上，然后挪到线段的端点上分整、零两部分就能计算了。
复杂度O(n+qlognlog精度)











题目大意：给定n,l[n],r[n]，你需要选择正整数数组x[n]，满足li<=xi<=ri，且x[]的
