题目来源：Google Code Jam 2017 Round 3 Problem C. Mountain Tour
题目大意：
有n个景点2n条旅游路线，每个景点是恰好2条旅游路线的起点和恰好2条旅游路线的终点。每天有24小时([0,23])，每天在s[i]时可以经过第i条旅游路线从景点(i+1)>>1出发到景点e[i]，耗时l[i](所以到达时间是(s[i]+l[i])%24)。如果要经过第i条旅游路线必须在景点(i+1)>>1等待到恰好s[i]时。只能通过旅游路线在景点间移动。现在是0时，景点1有一个人，求他经过所有旅游路线恰好一次的最小的旅游路线和等待时间的总耗时。n<=1000。
题目解法：
旅游路线对答案的贡献都是固定的，只需要最小化等待时间。设第i条边的出发时间s[i],到达时间t[i]。考虑景点i的2条入边a,b和2条出边c,d，对于i>1，如果钦定从a到达i时从c出去，那么从b到达i时必须从d出去。一共对答案造成(24+s[c]-t[a])%24+(24+s[d]-t[b])%24的贡献。如果钦定另一种选择，那么耗时是(24+s[c]-t[b])%24+(24+s[c]-t[a])%24。不妨设t[a]<t[b],s[c]<s[d]。如果t[a]<s[c]<t[b]<s[d]，或s[c]<t[a]<s[d]<t[b]，改变选择时对答案的贡献会改变24小时，因此先贪心选择贡献较小的方案。否则[t[a],t[b]]和[s[c],s[d]]是不相交或包含关系，改变选择没有代价，任意选择。对于景点1,不妨枚举入边出边的对应和出发的边，有4种情况。现在从每一条边出发会形成一个环。如果一个点的入边属于两个不同的环，改变它的选择会合并2个环。因此使用并查集维护每条边属于哪个环，先改变跨越两个环的代价为0的点，再改变代价为24的点，使环的数量变成1，最后加上景点1的耗时就好了。

题目来源：Google Code Jam 2017 Round 3 Problem D. Slate Modern
题目大意：
有一张R*C的网格，每个格子(x,y)有亮度值a[x][y]。有n个格子已经确定了亮度值，a[xi][yi]=Bi。要求上下左右相邻的格子亮度值之差小于等于D。问是否能给每个格子确定一个亮度值满足要求。如果可以，求最大的所有格子总亮度值。1<=R,C<=1000000000，1<=D,Bi<=1000000000，1<=n<=200。
题目解法：
假设R,C比较小，那么对于相邻的格子u,v，a[u]<=a[v]+D且a[v]<=a[u]+D，可以用类似差分约束的方法连一条无向边(u,v)，权值为D。新建源点S向n个固定点连边，权值为Bi。做一遍从S出发的最短路，如果n个格子中有dis[i]<Bi那么不可行，否则令所有格子的Ai=dis[i]就是最大方案。
对于大数据可以沿用最短路的方法。设行的集合r={1,R}U{xi|1<=i<=n}、列的集合c={1,C}U{yi|1<=i<=n}，取出"关键点"集合p={(x,y)|x∈r,y∈c}，则n个确定点都属于p，且p的大小是O(n^2)的。在p中上下左右相邻的点之间连边，边权等于两点间距离乘D，求出S到p中每个点的距离dis2，那么dis2[i]一定等于dis[i]。原图中剩下的点的最短路一定从它左上左下右上右下的4个关键点转移过来，对4个关键点围成的矩形区域，由左上角转移和由右上角转移的点分在一条竖直的直线两侧。另外3个方向同理，4条直线可以把矩形分成9块。四个角上的块里的点都从对应的角转移过来，中间的部分受到对角的影响，阶梯形分开。都可以直接求和。讨论一下就好了。
+-----+--+
|1|2|3|  +
|-|-|-|  +
|4|5|6|  +
|-|-|-|  +
|7|8|9|  +
+-----+--+
+-----+--+

题目来源：Google Code Jam 2017 Round 2 Problem C. Beaming With Joy
题目大意：
有一个R*C的房间。每个位置由一个字符表示。
'/'一面双面镜子，从左下到右上放置。
'\'一面双面镜子，从左上到右下放置。
'-'一个激光发射装置，向左右方向同时发射激光。
'|'一个激光发射装置，向上下方向同时发射激光。
'#'一个墙
'.'一个空地
激光会直线前进穿过空地，在撞到墙或离开地图边缘时消失，遇到镜子时按照光的反射定律反射，遇到激光发射装置会摧毁激光发射装置。现在可以任意改变激光发射装置的方向，从'-'变成'|'或相反，要求没有激光发射装置被摧毁，并且所有空地被激光经过。判断是否可行，如果可行输出一种方案。1<=R,C<=50。
题目解法：
每一个激光发射装置会不会摧毁其它激光发射装置只与它的方向有关。去掉会摧毁其它激光发射装置的方向之后，去掉已经确定的激光发射装置和它们覆盖的空地，剩余的每块空地最多能被上下方向和左右方向各一束激光经过。否则根据抽屉原理，一定有两个自由的激光发射装置可以同时发出经过这个空地的上下或左右边界的激光，那么由于光路可逆，它们会互相摧毁，应该已经被确定方向。因此每个空地需要两个激光发射装置中至少一个指向它，做一个2SAT就好了。

题目来源：Google Code Jam 2017 Round 2 Problem D. Shoot the Turrets
题目大意：
有一个R*C的城市。一开始每个位置由一个字符表示。
'#'一个建筑，阻挡视线和子弹，不能通行。
'.'一个空地，视线和子弹可以穿过，可以通行。
'S'一个士兵，可以上下左右移动，有一发子弹。
'T'一个炮塔，不能移动，只有被摧毁后可以通行。
一个位置的视线指的是向上下左右4个方向延伸直到离开地图或遇到建筑之前的十字形区域。
士兵的目标是摧毁尽量多的炮塔。每个士兵可以进行不超过M次行动，每次行动可以选择移动到上下左右相邻的可通行方块，或者使用子弹摧毁视线中任意一个炮塔，子弹对其他士兵和非目标的炮塔没有影响。同一位置可以同时有多个士兵。每个士兵只能开枪一次。
一个炮塔会攻击一个士兵当且仅当它的视线中一个士兵尝试离开视线。这个士兵可能是一开始就在炮塔的视线中，也可能是从视线外走进来。士兵在离开视线的动作完成前就会被杀死，这次攻击对其他士兵和炮塔没有影响。士兵在炮塔的视线内的行动不受影响，只要不离开任意炮塔的视线。当然，没有任何士兵需要被杀死，只要原地不动就可以保证安全。
判断最多能摧毁多少炮塔，并给出方案。士兵从上到下从左到右从1开始编号。炮塔也从1开始编号。假设最多摧毁ans个炮塔，输出ans+1行，第一行ans，之后第i+1行输出si,ti，表示第i个被摧毁的炮塔是ti，由士兵si开枪摧毁。
1<=R,C<=100。'S'和'T'不超过100个。
题目解法：
对于每个士兵，如果他没有出现在答案中，那么他不需要进行任何动作。否则，在前i-1个炮塔被摧毁前，士兵si也不需要有任何动作。建二分图G，如果士兵i在其他炮塔都被摧毁时能摧毁炮塔j，那么连边(i,j)。求出图G的最大匹配M就是答案。之后需要求出方案。进行一次BFS，求出各个士兵在没有炮塔被摧毁时能摧毁的炮塔，建成图G'。在G中有出边的士兵在G'中也有至少一条出边。把M和G'并起来变成二分图H。如果M中有士兵i在G'中有出边(i,j)，j不在M中，那么可以把i的匹配改成j。如果不存在这样的点，那么从士兵u开始，走到G'中和它相邻的炮塔v，再走到M中v的匹配点u2，以此类推，一定会找到环，把M中环上从炮塔出发的边换成从士兵出发的边，可以得到至少一个可以执行的动作。执行所有这些动作，去掉这些炮塔，重新求出图G'，循环直到执行了ans个动作就好了。

题目来源：Google Code Jam 2017 Round 1C Problem B. Parenting Partnering
题目大意：
有一个长度为1440的环，环上有n个区间必须是黑色，m个区间必须是白色。给环上每个位置染黑或染白，两种颜色分别有720个，求黑白边界的最少数量。0<=n,m<=100,n+m>=1。
题目解法：
把第一个确定的区间复制到最后，这样可以改变的区间都在两个确定的区间中间。两边颜色不同的区间对答案的贡献一定是1。对于两边颜色相同的区间，可以选择不使用另一种颜色，不产生边界，或者使用另一种颜色，代价是2。把这些区间按长度从小到大排序，贪心填充直到一种颜色不够就好了。
