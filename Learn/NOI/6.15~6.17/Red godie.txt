788 804 773

题目来源：
	Codeforces 788D
题目大意：
	交互题。
	二维平面上有共 n 条未知的平行于坐标轴的直线。
	你每次可以询问一个平面上点，交互库将返回该点与离它最近的直线之间的距离。
	你要在 3e5 次询问内确定这 n 条直线。
	题目保证直线 x=a 或者 y=a 中 |a|<=1e18，你询问的点坐标也要在 [-1e18,1e18] 中。
	n <= 1e4
题目解法：
	注意到竖直的直线和水平的直线会相互影响，我们不妨先求出并集再具体区分水平还是竖直。
	考虑分治求这样一个函数：calc(l,r) 表示找出所有 l<=a<=r 的直线。
	查询 (mid,mid) 这个点的距离 d 。
		如果 d = 0 ，就表示该处有直线，加入集合，并 calc(l,mid-1) ， calc(mid+1,r) 。
		否则 [mid-d+1,mid+d-1] 这段区间内不存在直线，直接 calc(l,mid-d) ， calc(mid+d,r) 。
	找出所有集合的并集之后，找到一个不在该集合中的 v ，就能确定直线是水平还是竖直。	
	
题目来源：
	Codeforces 788E
题目大意：
	有一个长度为 n 的序列 {a_i} 和一个初始值均为 1 的长度为 n 的序列 {b_i} 。
	我们将一个五元组表示成 {i1,i2,i3,i4,i5} 。
	其中，要求 a_i1<=a_i2=a_i3=a_i4>=a_i5 ，且 b[a_i2]=b[a_i3]=b[a_i4]=1 。
	有一些修改操作，会将某个 b_i 赋为 0 或 1 。
	每次修改操作过后，问整个序列中，满足要求的五元组的数量。
	n <= 1e5
题目解法：
	首先考虑怎样计算该五元组的数量。
		我们枚举 i3 ，那么它对答案的贡献就是 cnt(pair(i1,i2))*cnt(pair(i4,i5)) 。
		考虑 pair(i1,i2) ，实际上就是 \sum\limits{i2=1..i3,a_i2=a_i3} psum[i1] ， 其中 psum[i1] 表示前缀小于自己的数的个数。
		而 pair(i3,i4) 类似。
		这样，我们按权值从小到大预处理之后，就变成求 \sum pfx_i*sfx_i。
	剩下的修改部分就很简单了，实际上它仅在自己权值这层会有影响，相当于区间的 pfx_i , suf_i 减去自己的部分，用线段树维护一下即可。

题目来源：
	Codeforces 773E
题目大意：
	对一个排好序的数组我们计算这样一个函数 F 。
	F 初值为 0 。
	按顺序依次将 F 与 a_i 比较
		如果 F < a_i ， F++ 。
		如果 F = a_i ， F 不变 。
		如果 F > a_i ， F-- 。
	依次插入 n 个数字，保证之后数组有序，维护每次加入后的 F 值。
	n <= 5e5
	
题目解法：
	我们维护每个数对答案的贡献，只有 -1,0,1 三种可能。
	我们用一棵线段树维护 a_i - F_i 以此快速知道，这个点插入的时候，它的贡献。
	考虑插入的时候对其它点的修改。
	如果插入的是 0 ，显然没有任何影响。
	如果是 -1 ，可能会让第一个 0 变成 -1 。
	如果是 1 ，可能会让第一个 0 前的 1 变成 0。
	维护一下即可。
	
题目来源：
	Codeforces 773F
题目大意：
	求满足以下要求的数列 {a_1..a_n} 的数量。
		1. n 为奇数
		2. a_1 < a_2 < ... < a_n
		3. a_n 为偶数 且 对于最大的 2^k 整除 a_n , 2^{k+1} 不整除 a_n 的 k ， 2^k 整除所有 a_i 。
	n <= 3e4 , |a_i| <= 1e9 , mod <= 1e5+129
题目解法：
	令 f(lim,n,0/1) 表示 a_i <= lim , 大小为 n , 最大的数是奇数还是偶数。
	考虑倍增求 f 。
	f(lim*2,n,x)= f(lim,n,x)+\sum_{i=0}^{n-1} (f(lim,i,0)+f(lim,i,1))*f(lim,n-i,x^(lim&1))
	f(lim+1,n,x)= f(lim,n,x)+[lim&1==!x]*f(lim,n-1,x)
	用 FFT 加速上述递推过程即可。

题目来源：
	Codeforces 804 E
题目大意：
	n 个数会有 n*(n+1)/2 对点，使用 (i,j) 的意义是交换 (a_i,a_j) 。
	求一组构造方案，使得按照你给的顺序使用每个点对一次且仅用一次，能使排列 {1..n} 变换后还是 {1..n}。
	没有方案输出 NO。
题目解法：
	首先，我们需要偶数次交换，因此 n % 4 = 0 / 1 。
	考虑从 n 构造到 n + 4 。
	实际上就是 n = 4 的方案中，存在 (1,2) 和 (3,4) ，在使用这两对之前，将其中一个与之前的 n 顺序交换，另一个逆序交换，即可。

题目来源：
	Codeforces 804 F
题目大意：
	
